import crafttweaker.item.IItemStack;
import mods.dropt.Dropt;

var clumps = Dropt.list("gtce_clumps").priority(1);

var clump = <materialpart:tenorite:clump>.getItemStack() as IItemStack;
<ore:oreTenorite>.add(clump);
furnace.addRecipe(<gregtech:meta_item_1:10018>, clump);



/*
 * Red Granite Igneous Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_88:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_stone:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_88:8>])
    )
);


/*
 * Black Granite Igneous Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_169:10"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_stone:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_169:10>])
    )
);


/*
 * Rhyolite Igneous Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_114:14"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_stone:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_114:14>])
    )
);


/*
 * Andesite Igneous Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_66:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_stone:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_66:8>])
    )
);


/*
 * Gabbro Igneous Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_104:1"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_stone:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_104:1>])
    )
);


/*
 * Basalt Igneous Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_169:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_stone:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_169:8>])
    )
);


/*
 * Komatiite Igneous Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_4:1"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_stone:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_4:1>])
    )
);


/*
 * Dacite Igneous Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_144:14"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_stone:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_144:14>])
    )
);


/*
 * Gneiss Metamorphic Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_74:6"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_stone:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_74:6>])
    )
);


/*
 * Eclogite Metamorphic Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_115:15"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_stone:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_115:15>])
    )
);


/*
 * Marble Metamorphic Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_90:14"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_stone:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_90:14>])
    )
);


/*
 * Quartzite Metamorphic Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_67:12"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_stone:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_67:12>])
    )
);


/*
 * Blueschist Metamorphic Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_49:1"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_stone:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_49:1>])
    )
);


/*
 * Greenschist Metamorphic Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_99:14"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_stone:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_99:14>])
    )
);


/*
 * Soapstone Metamorphic Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_9:13"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_stone:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_9:13>])
    )
);


/*
 * Migmatite Metamorphic Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_118:4"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_stone:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_118:4>])
    )
);


/*
 * Limestone Sedimentary Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_110:1"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_stone:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_110:1>])
    )
);


/*
 * Chalk Sedimentary Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_159:10"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_stone:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_159:10>])
    )
);


/*
 * Shale Sedimentary Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_82:12"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_stone:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_82:12>])
    )
);


/*
 * Siltstone Sedimentary Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_165:15"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_stone:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_165:15>])
    )
);


/*
 * Lignite Sedimentary Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_116:11"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_stone:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_116:11>])
    )
);


/*
 * Dolomite Sedimentary Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_58:9"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_stone:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_58:9>])
    )
);


/*
 * Greywacke Sedimentary Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_39:15"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_stone:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_39:15>])
    )
);


/*
 * Chert Sedimentary Stone
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_161:4"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_stone:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_161:4>])
    )
);


/*
 * Red Granite Igneous Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_345:4"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_gravel:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_345:4>])
    )
);


/*
 * Black Granite Igneous Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_291:0"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_gravel:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_291:0>])
    )
);


/*
 * Rhyolite Igneous Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_462:14"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_gravel:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_462:14>])
    )
);


/*
 * Andesite Igneous Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_258:1"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_gravel:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_258:1>])
    )
);


/*
 * Gabbro Igneous Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_394:0"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_gravel:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_394:0>])
    )
);


/*
 * Basalt Igneous Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_309:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_gravel:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_309:8>])
    )
);


/*
 * Komatiite Igneous Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_434:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_gravel:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_434:8>])
    )
);


/*
 * Dacite Igneous Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_299:3"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_gravel:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_299:3>])
    )
);


/*
 * Gneiss Metamorphic Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_415:7"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_gravel:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_415:7>])
    )
);


/*
 * Eclogite Metamorphic Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_174:13"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_gravel:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_174:13>])
    )
);


/*
 * Marble Metamorphic Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_210:14"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_gravel:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_210:14>])
    )
);


/*
 * Quartzite Metamorphic Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_290:11"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_gravel:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_290:11>])
    )
);


/*
 * Blueschist Metamorphic Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_505:12"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_gravel:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_505:12>])
    )
);


/*
 * Greenschist Metamorphic Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_462:2"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_gravel:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_462:2>])
    )
);


/*
 * Soapstone Metamorphic Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_446:2"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_gravel:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_446:2>])
    )
);


/*
 * Migmatite Metamorphic Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_325:7"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_gravel:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_325:7>])
    )
);


/*
 * Limestone Sedimentary Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_359:5"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_gravel:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_359:5>])
    )
);


/*
 * Chalk Sedimentary Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_349:1"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_gravel:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_349:1>])
    )
);


/*
 * Shale Sedimentary Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_363:13"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_gravel:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_363:13>])
    )
);


/*
 * Siltstone Sedimentary Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_340:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_gravel:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_340:8>])
    )
);


/*
 * Lignite Sedimentary Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_267:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_gravel:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_267:8>])
    )
);


/*
 * Dolomite Sedimentary Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_174:6"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_gravel:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_174:6>])
    )
);


/*
 * Greywacke Sedimentary Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_189:12"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_gravel:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_189:12>])
    )
);


/*
 * Chert Sedimentary Gravel
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_351:0"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_gravel:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_351:0>])
    )
);


/*
 * Red Granite Igneous Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_267:10"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_sand:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_267:10>])
    )
);


/*
 * Black Granite Igneous Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_479:6"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_sand:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_479:6>])
    )
);


/*
 * Rhyolite Igneous Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_196:3"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_sand:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_196:3>])
    )
);


/*
 * Andesite Igneous Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_321:12"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_sand:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_321:12>])
    )
);


/*
 * Gabbro Igneous Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_358:6"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_sand:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_358:6>])
    )
);


/*
 * Basalt Igneous Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_485:14"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_sand:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_485:14>])
    )
);


/*
 * Komatiite Igneous Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_288:12"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_sand:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_288:12>])
    )
);


/*
 * Dacite Igneous Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_482:7"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:igneous_sand:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_482:7>])
    )
);


/*
 * Gneiss Metamorphic Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_501:12"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_sand:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_501:12>])
    )
);


/*
 * Eclogite Metamorphic Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_271:15"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_sand:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_271:15>])
    )
);


/*
 * Marble Metamorphic Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_336:5"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_sand:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_336:5>])
    )
);


/*
 * Quartzite Metamorphic Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_392:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_sand:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_392:8>])
    )
);


/*
 * Blueschist Metamorphic Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_215:9"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_sand:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_215:9>])
    )
);


/*
 * Greenschist Metamorphic Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_241:14"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_sand:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_241:14>])
    )
);


/*
 * Soapstone Metamorphic Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_330:8"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_sand:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_330:8>])
    )
);


/*
 * Migmatite Metamorphic Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_350:15"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:metamorphic_sand:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_350:15>])
    )
);


/*
 * Limestone Sedimentary Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_480:3"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_sand:0>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_480:3>])
    )
);


/*
 * Chalk Sedimentary Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_287:4"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_sand:1>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_287:4>])
    )
);


/*
 * Shale Sedimentary Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_253:1"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_sand:2>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_253:1>])
    )
);


/*
 * Siltstone Sedimentary Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_248:11"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_sand:3>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_248:11>])
    )
);


/*
 * Lignite Sedimentary Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_421:0"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_sand:4>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_421:0>])
    )
);


/*
 * Dolomite Sedimentary Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_422:4"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_sand:5>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_422:4>])
    )
);


/*
 * Greywacke Sedimentary Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_488:0"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_sand:6>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_488:0>])
    )
);


/*
 * Chert Sedimentary Sand
 */
clumps.add(Dropt.rule()
    .matchBlocks(["contenttweaker:sub_block_holder_214:2"])
    .dropStrategy("UNIQUE")
    .dropCount(Dropt.range(5))
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 1)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 2)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 3)
        .items([<materialpart:tenorite:clump>.getItemStack()], Dropt.range(0,1))
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "EXCLUDED", 0)
        .items([<undergroundbiomes:sedimentary_sand:7>])
    )
    .addDrop(Dropt.drop()
        .selector(Dropt.weight(1), "REQUIRED")
        .items([<contenttweaker:sub_block_holder_214:2>])
    )
);

